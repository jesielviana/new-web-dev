{"componentChunkName":"component---src-templates-markdown-js","path":"/lectures/6-nodejs","result":{"data":{"markdownRemark":{"html":"<p>class: center, middle, block-text</p>\n<h1>Introdução ao</h1>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 621px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 61%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Logo do Node.js\"\n        title=\"Logo do Node.js\"\n        src=\"/static/93fc90b7bbad5fc2eaa58092012c1e4c/3075e/nodejs.png\"\n        srcset=\"/static/93fc90b7bbad5fc2eaa58092012c1e4c/772e8/nodejs.png 200w,\n/static/93fc90b7bbad5fc2eaa58092012c1e4c/e17e5/nodejs.png 400w,\n/static/93fc90b7bbad5fc2eaa58092012c1e4c/3075e/nodejs.png 621w\"\n        sizes=\"(max-width: 621px) 100vw, 621px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>Programação para Internet II - ADS 2020.2</p>\n<p>Prof. @jesielviana</p>\n<hr>\n<h1>Node.js</h1>\n<p><q cite=\"https://leanpub.com/construindo-apis-testaveis-com-nodejs\"> Node.js não é uma linguagem de programação, tampouco um framework. A definição mais apropriada seria: um ambiente de runtime para Javascript que roda em cima de uma engine conhecida como Google v8. </q> <a href=\"https://leanpub.com/construindo-apis-testaveis-com-nodejs\" target=\"_blank\">Waldemar Neto</a></p>\n<p><q cite=\"https://nodejs.org\"> <a href=\"https://nodejs.org\" target=\"_blank\">Node.js®</a> is a JavaScript runtime built on Chrome's V8 JavaScript engine. </q></p>\n<hr>\n<h1>V8</h1>\n<p><q cite=\"https://v8.dev\"> <a href=\"https://v8.dev\" target=\"_blank\">V8</a> is Google’s open source high-performance JavaScript engine, written in C++. It is used in Chrome and in Node.js, among others. </q></p>\n<hr>\n<p>class: center</p>\n<h1>Client-side JavaScript x Node.js</h1>\n<p><img src=\"https://pbs.twimg.com/media/C5_ue1TWYAA0C1R?format=jpg&#x26;name=large\" alt=\"Client-side JavaScript x Node.js\"></p>\n<div  class=\"reference\">\nFonte: <a href=\"https://twitter.com/kosamari/status/837650274672082944\" target=\"_blank\">@kosamari</a>\n</div>\n<hr>\n<h1>Node.js</h1>\n<ul>\n<li>Single-thread</li>\n<li>Event-driven</li>\n<li>Non-blocking I/O</li>\n</ul>\n<hr>\n<h1>Arquitetura Node.js</h1>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 800px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 42%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Arquitetura Node.js\"\n        title=\"Arquitetura Node.js\"\n        src=\"/static/bb70179268915b4f596c4bee43a9e13c/5a190/nodejs-architeture.png\"\n        srcset=\"/static/bb70179268915b4f596c4bee43a9e13c/772e8/nodejs-architeture.png 200w,\n/static/bb70179268915b4f596c4bee43a9e13c/e17e5/nodejs-architeture.png 400w,\n/static/bb70179268915b4f596c4bee43a9e13c/5a190/nodejs-architeture.png 800w,\n/static/bb70179268915b4f596c4bee43a9e13c/9d5da/nodejs-architeture.png 871w\"\n        sizes=\"(max-width: 800px) 100vw, 800px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<div  class=\"reference\">\nFonte: <a href=\"https://scoutapm.com/blog/nodejs-architecture-and-12-best-practices-for-nodejs-development\" target=\"_blank\">Scout APM</a>\n</div>\n<hr>\n<h1>Leitura de arquivo de forma assíncrona (não-bloqueante)</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vamos ler um arquivo de forma assíncrona'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// o arquivo 'arquivo.txt' deve estar no mesmo diretório que este código</span>\nfs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./arquivo.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">erro<span class=\"token punctuation\">,</span> conteudo</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>erro<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> erro\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arquivo lido, quantidade de caracteres: '</span><span class=\"token punctuation\">,</span> conteudo<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'primeiro exemplo Node.js assíncrono'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<a target=\"_blank\" href=\"https://github.com/ifpipicos/resources/blob/main/arquivo.txt\">\narquivo.txt\n</a>\n<hr>\n<h1>Leitura de arquivo de forma síncrona (bloqueante)</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'vamos ler um arquivo de forma síncrona'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// o arquivo 'arquivo.txt' deve estar no mesmo diretório que este código</span>\n<span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> conteudo <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFileSync</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arquivo.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'arquivo lido, quantidade de caracteres: '</span><span class=\"token punctuation\">,</span> conteudo<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'primeiro exemplo Node.js síncrono'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<a target=\"_blank\" href=\"https://github.com/ifpipicos/resources/blob/main/arquivo.txt\">\narquivo.txt\n</a>\n<hr>\n<h1>Criando Servidor HTTP</h1>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre style=\"counter-reset: linenumber 0\" class=\"language-javascript line-numbers\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> http <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'http'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token constant\">PORT</span> <span class=\"token operator\">=</span> <span class=\"token number\">3000</span>\n<span class=\"token keyword\">const</span> <span class=\"token constant\">SUCCESS_CODE</span> <span class=\"token operator\">=</span> <span class=\"token number\">200</span>\n\n<span class=\"token keyword\">const</span> server <span class=\"token operator\">=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">createServer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  res<span class=\"token punctuation\">.</span>statusCode <span class=\"token operator\">=</span> <span class=\"token constant\">SUCCESS_CODE</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">setHeader</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Content-Type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/html'</span><span class=\"token punctuation\">)</span>\n  res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;h1>Hello World!&lt;/h1>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\nserver<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token constant\">PORT</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Servidor rodando na porta: '</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">PORT</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>class: center, middle, block-text</p>\n<h1>Hands-on</h1>\n<hr>\n<p>class: center, middle, block-text</p>\n<h1>Introdução ao</h1>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 621px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 61%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Logo do Node.js\"\n        title=\"Logo do Node.js\"\n        src=\"/static/93fc90b7bbad5fc2eaa58092012c1e4c/3075e/nodejs.png\"\n        srcset=\"/static/93fc90b7bbad5fc2eaa58092012c1e4c/772e8/nodejs.png 200w,\n/static/93fc90b7bbad5fc2eaa58092012c1e4c/e17e5/nodejs.png 400w,\n/static/93fc90b7bbad5fc2eaa58092012c1e4c/3075e/nodejs.png 621w\"\n        sizes=\"(max-width: 621px) 100vw, 621px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>Programação para Internet II - ADS 2020.2</p>\n<p>Prof. @jesielviana</p>","frontmatter":{"date":"March 19, 2021","path":"/lectures/6-nodejs","title":"Introdução ao Node.js","hidden":false}}},"pageContext":{}},"staticQueryHashes":["2277278352","3649515864"]}