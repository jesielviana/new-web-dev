{"componentChunkName":"component---src-templates-markdown-js","path":"/lectures/5-arquitetura-web","result":{"data":{"markdownRemark":{"html":"<p>class: center, middle, block-text</p>\n<h1>Arquitetura de Aplicações Web</h1>\n<p>Programação para Internet II - ADS 2020.2</p>\n<p>Prof. @jesielviana</p>\n<hr>\n<h1>Arquitetura de aplicações Web</h1>\n<p>A arquitetura de aplicações da Web descreve a estrutura e interações entre seus componentes, bancos de dados e sistemas externos.</p>\n<hr>\n<h1>Tipos de aplicações</h1>\n<ul>\n<li>Aplicações estáticas (HTML, CSS e Javascript)</li>\n<li>Aplicações dinâmicas/interativas</li>\n</ul>\n<hr>\n<h1>Aplicações estáticas</h1>\n<p>Utiliza a famosa arquitetua cliente-servidor simples e pura.\n<img src=\"https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/basic_static_app_server.png\" alt=\"Arquitetura de sites estáticos\"></p>\n<div  class=\"reference\">\n<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\" target=\"_blank\">Fonte</a>\n</div>\n<hr>\n<h1>Aplicações dinâmicas/interativas</h1>\n<p>Geralmente baseada na arquitetura cliente-servidor, porém com mais outras camadas.\n<img src=\"https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview/web_application_with_html_and_steps.png\" alt=\"Arquitetura de sites dinâmicos\"></p>\n<div  class=\"reference\">\n<a href=\"https://developer.mozilla.org/en-US/docs/Learn/Server-side/First_steps/Client-Server_overview\" target=\"_blank\">Fonte</a>\n</div>\n<hr>\n<h1>Arquitetura Monolítica</h1>\n<p><img src=\"http://www.opus-software.com.br/wp-content/uploads/2017/02/micro-servicos-arquitetura-monolitica.png\" alt=\"Arquitetura Monolítica\"></p>\n<div  class=\"reference\">\n<a href=\"https://www.opus-software.com.br/micro-servicos-arquietura-monolitica\" target=\"_blank\">Fonte</a>\n</div>\n<ul>\n<li>Server-rendered HTML</li>\n<li>Nova alternativa: <a href=\"https://hotwire.dev/\">https://hotwire.dev/</a></li>\n</ul>\n<hr>\n<h1>Arquitetura REST</h1>\n<p>Estilo de arquitetura de software. Conforme descrito em uma dissertação de Roy Fielding, o REST é um conjunto de princípios que definem como Web Standards, tais como HTTP e URIs, devem ser usados para comunicação na Web.</p>\n<p><img src=\"https://miro.medium.com/max/2248/1*i5wQ5OHuTRMa_LHzlMXIHg.png\" alt=\"Arquitetura REST\"></p>\n<div  class=\"reference\">\n<a href=\"https://medium.com/javarevisited/top-5-books-and-courses-to-learn-restful-web-services-in-java-using-spring-mvc-and-spring-boot-79ec4b351d12\" target=\"_blank\">Fonte</a>\n</div>\n<hr>\n<h1>REST com Single-Page Applications (SPAs)</h1>\n<p>Aplicações SPA em vez de carregar páginas completamente novas do servidor a cada ação do usuário, elas carregam só o conteúdo dinâmico, geralemente JSON, sem a necessidade de recarregar arquivos estáticos (HTML, CSS e JS).</p>\n<p><img src=\"https://bezkoder.com/wp-content/uploads/2019/12/vue-node-express-mysql-architecture.png\" alt=\"Arquitetura SPA\"></p>\n<div  class=\"reference\">\n<a href=\"https://bezkoder.com/vue-js-node-js-express-mysql-crud-example/\" target=\"_blank\">Fonte</a>\n</div>\n<hr>\n<h1>Arquitetura de Microsserviços</h1>\n<p>Microsserviço é uma abordagem para desenvolver uma única aplicação como uma suíte de serviços, cada um rodando em seu próprio processo e se comunicando através de mecanismos leves, geralmente através de uma API HTTP. Estes serviços são construídos através de pequenas responsabilidades e publicados em produção de maneira independente através de processos de deploys automatizados <a href=\"https://martinfowler.com/articles/microservices.html\" target=\"_blank\">[1]</a>.</p>\n<hr>\n<p>class: center, middle</p>\n<h1>Exemplo de Microsserviços no Nubank</h1>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; max-width: 800px; \"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 56.49999999999999%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image\"\n        alt=\"Microsserviço Nubank\"\n        title=\"Microsserviço Nubank\"\n        src=\"/static/3a259a33766ca1eea59ec063b5a9afd1/5a190/nubank.png\"\n        srcset=\"/static/3a259a33766ca1eea59ec063b5a9afd1/772e8/nubank.png 200w,\n/static/3a259a33766ca1eea59ec063b5a9afd1/e17e5/nubank.png 400w,\n/static/3a259a33766ca1eea59ec063b5a9afd1/5a190/nubank.png 800w,\n/static/3a259a33766ca1eea59ec063b5a9afd1/1568e/nubank.png 892w\"\n        sizes=\"(max-width: 800px) 100vw, 800px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p><a class=\"reference\" href=\"https://www.infoq.com/br/presentations/construindo-a-nuconta-do-zero-a-milhoes-de-clientes/\" target=\"_blank\">Fonte</a></p>\n<hr>\n<p>class: center, middle</p>\n<h1>API Gateway</h1>\n<p><img src=\"https://cdn.wp.nginx.com/wp-content/uploads/2016/04/Richardson-microservices-part2-3_api-gateway.png\" alt=\"API Gateway\"></p>\n<p><a class=\"reference\" href=\"https://www.nginx.com/blog/building-microservices-using-an-api-gateway/\" target=\"_blank\">Fonte</a></p>\n<hr>\n<p>class: center, middle, block-text</p>\n<h1>Arquitetura de Aplicações Web</h1>\n<p>Programação para Internet II - ADS 2020.2</p>\n<p>Prof. @jesielviana</p>","frontmatter":{"date":"March 02, 2021","path":"/lectures/5-arquitetura-web","title":"Arquitetura Web","hidden":false}}},"pageContext":{}},"staticQueryHashes":["2277278352","3649515864"]}