{"componentChunkName":"component---src-templates-mdx-js","path":"/assignments/9","result":{"data":{"mdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"path\": \"/assignments/9\",\n  \"date\": \"2019-10-29\",\n  \"title\": \"Final Project Specifications\",\n  \"due\": \"2019-12-02\",\n  \"hidden\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"CIS 197 F19 Final Project Document\"), mdx(\"p\", null, \"The final project consists of 3 milestones and a presentation. Milestones exist so that you are incentivized to not hold off working on your project until the very last moment. JavaScript is BUGGY and having the foresight to see JS bugs isn\\u2019t something that comes until you\\u2019ve completed many projects.\"), mdx(\"h2\", null, \"Basic Requirements\"), mdx(\"p\", null, \"Though the choice of what your project should accomplish is up to you, we have a few basic requirements that must be a part of your application. If you have an idea that you really want to build but doesn\\u2019t meet the criteria below, then you can speak to a TA for override. Otherwise, every final project must\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have a notion of users and accounts (hashed passwords)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use a database\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Have a frontend\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use express\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Need to deploy to Heroku and submit heroku (deployed app) + Github (source code) links\")), mdx(\"p\", null, \"Other than these requirements, you\\u2019re free to build whatever you want or select from our preset list of projects (below). If you choose to build whatever you want, you need to submit a proposal to the TA staff. If you chose to build a pre-set project, you do not need to submit a proposal, but you will need to communicate to 197 staff which project you have selected.\"), mdx(\"h3\", null, \"Projects you can build\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"App for keeping track of which friends to (virtually) stay in touch with\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users and accounts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After logging in, users can\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"add/remove friends from their friends list\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"mark friends as \\\"have seen in the last week\\\"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Every week, if there are any friends for the user who have not been seen in the past week, an email should be sent to the user, reminding them of which friends they should reach out to.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Twilio for creating + sending daily text reminders\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Users and accounts\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"After logging in, users can  \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Add new text reminders. Each reminder needs to have a cadence (hourly, daily, weekly, etc.)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write a function that runs every hour + checks if there are any un-sent reminders. If so, send text reminders using Twilio's API.\")))))), mdx(\"h2\", null, \"Other vague project ideas\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quarantine forum where users post daily updates\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write a game where users log in to track their score and can share scores\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"App for keeping track of which friends to (virtually) stay in touch with\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"COVID dataset visualizer on using Google Maps API (Johns Hopkins dataset)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Chat server using Socket.io\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Twilio for creating + sending daily text reminders\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A better when2meet that actually works on mobile and isn't from the 1990s... (and integrates with your google calendar or iCal CalDAV/rss feed... my my that would be amazing)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"React Native application for organizing spontaneous meetups with friends\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Messenger Bot for roommate management (schedule chores, split bills, add grocery items, and add check in functionality for all roommates). Node backend + Mongodb + facebook messenger API\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Social network (tinder but for dogs... or something like that) with the ability to create profiles, share content, and friend users. React + Redux frontend + node backend + mongodb needed\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Extension of any of the homeworks (but be sure to consult us on this to see if it is reasonably complex enough e.g. Redoing the stock portfolio but in react)\")), mdx(\"h2\", null, \"Due dates\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proposal / project selection by \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Final submission by May 12\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"29/10/2019","due":"Monday, December 02, 2019","path":"/assignments/9","hasZip":null,"title":"Final Project Specifications","metaTitle":null,"hidden":true}}},"pageContext":{}},"staticQueryHashes":["2277278352","3649515864"]}