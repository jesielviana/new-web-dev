{"componentChunkName":"component---src-templates-markdown-js","path":"/syllabus","result":{"data":{"markdownRemark":{"html":"<h1>CIS 197: Intro to JavaScript</h1>\n<h3>Course Description</h3>\n<p>This course provides an introduction to modern JavaScript: frameworks, design patterns, techniques, and best practices used to create robust applications both server-side and client-side. The emphasis will be on sampling a wide range of JavaScript use cases. Topics covered will include:</p>\n<ul>\n<li>JavaScript language</li>\n<li>Web browser internals, the Document Object Model (DOM), jQuery, HTTP requests</li>\n<li>Webkit developer tools &#x26; JS debugging</li>\n<li>MV* frameworks (Backbone.js, ReactJS)</li>\n<li>Client-side app architecture, modular JS development &#x26; best practices</li>\n<li>Server-side app architecture (with ExpressJS), middleware, and RESTful API design</li>\n<li>Browser extensions</li>\n</ul>\n<p>This course is most useful for students who have some programming and web development experience and want to develop moderate JavaScript skills to be able to build complex, interactive applications.</p>\n<hr>\n<h3>Prerequisites</h3>\n<ul>\n<li>CIS 120 (or permission of instructor)</li>\n<li>Basic knowledge of creating web pages with HTML/CSS (<strong>not</strong> Dreamweaver, Flash, etc). If this prerequisite is not met, a student can quickly pick up the basics with online resources (like Mozilla Developer Network and Codecademy) or seek further advice from the instructor.</li>\n</ul>\n<hr>\n<h3>Reading (recommended)</h3>\n<ul>\n<li><em><a href=\"http://www.amazon.com/JavaScript-Good-Parts-Douglas-Crockford/dp/0596517742\">JavaScript: The Good Parts​</a>​</em> - Douglas Crockford</li>\n<li><em><a href=\"http://eloquentjavascript.net/\">Eloquent JavaScript​</a></em> - Marijn Haverbeke</li>\n<li><em><a href=\"http://addyosmani.github.io/backbone-fundamentals/\">Developing Backbone.js Applications​</a></em> - Addy Osmani</li>\n</ul>\n<hr>\n<h3>Assignments</h3>\n<p><strong><em>See the course website for the <a href=\"http://www.seas.upenn.edu/~cis197/lectures/\">lecture schedule</a> and <a href=\"http://www.seas.upenn.edu/~cis197/assignments/\">assignment list</a></em></strong>.</p>\n<p>This is a project-based course featuring 7 assignments and a heavily-weighted overall <strong>final project</strong>. The final project may be created with the framework of the student's choice and should demonstrate 20+ hours of work (more information will be available near the end of the semester).</p>\n<p>Each assignment is due <strong>at midnight</strong> on the assigned day (unless otherwise specified). You have two <strong>free</strong> late days to use throughout the course. After this, late submissions will be docked <strong>20%</strong> for every day late. Additional extensions will <strong><em>only</em></strong> be granted in truly extenuating circumstances.</p>\n<p><strong><em>Grading</em></strong>: Your submissions will be graded out of <strong>25</strong> points: <strong>15</strong> for <em>program correctness</em> (automatically graded), <strong>5</strong> for <em>JavaScript best practices</em> (automatically graded), and 5 for <em>code style</em> (manually graded).</p>\n<p>Please note that the code style grade is additive, not subtractive; if you do not complete a homework, you will not receive 5 style points for ‘making no errors,’ but rather 0 style points for writing no code at all.</p>\n<p>If a submission doesn't run (i.e. has syntax errors), we will not be lenient -- you will likely receive zero credit. Please start assignments early and use office hours to your advantage.</p>\n<p><strong><em>Academic Integrity</em></strong>: You may reference and use example code online if it is freely available (open source). You may have <em>high-level</em> discussions about assignments (“What are the project specifications?”) and <em>low-level</em> discussions about JavaScript (“what’s the syntax for X?”) with classmates. Please do not plagiarize or have <em>“mid-level”</em> discussions about assignments – when in doubt, ask. No violations of academic integrity will be tolerated; you will at least receive a zero on the assignment in question, and at worst the issue will be elevated to the Office of Student Conduct.</p>\n<hr>\n<h3>Regrade Requests</h3>\n<p>Regrade requests can be submitted via Gradescope up to one week after your grade for that assignment is released. Regrades are handled on a case-by-case basis. You cannot change code or alter your submission once it has been graded. Rather regrade requests are only over a lack of clarity of consistency in test cases or rubrics.</p>\n<hr>\n<h3>Grade Weighting</h3>\n<ul>\n<li>70% Homework</li>\n<li>25% Final Project</li>\n<li>5% Class Participation</li>\n</ul>","frontmatter":{"date":"February 01, 2020","path":"/syllabus","title":"Course Syllabus","hidden":null}}},"pageContext":{}}}